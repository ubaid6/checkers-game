{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ubaid\\\\Desktop\\\\Summer Projects\\\\checkers-game\\\\src\\\\Game.tsx\";\nimport React from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    if (this.props.piece === \"null\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square white\",\n      onClick: this.props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"white\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"red\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"whiteKing\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece white king\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"redKing\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece red king\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(piece, index) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      piece: piece,\n      onClick: () => this.props.onClick(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  makeBoard(boardState) {\n    var boardRows = new Array(8);\n\n    for (let i = 0; i < 8; i++) {\n      var row = new Array(8);\n\n      for (let j = 0; j < 8; j++) {\n        row.push(this.renderSquare(boardState[i][j], [i, j]));\n      }\n\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this));\n    }\n\n    return boardRows;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: this.makeBoard(this.props.boardState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardState: [],\n      isBoardInitialized: false,\n      pieceLoaded: \"null\",\n      pieceLoadedCoords: [],\n      redPieces: 12,\n      whitePieces: 12,\n      whiteTurn: true,\n      pieceJumped: false\n    };\n  }\n\n  checkGameOver() {\n    if (this.state.redPieces === 0) return \"red\";\n    return false;\n  }\n\n  getPiece(i, j) {\n    return this.state.boardState[i][j];\n  }\n\n  hasPiece(i, j) {\n    if (this.state.boardState[i][j] === \"empty\") return false;else return true;\n  }\n\n  removeJumpedPiece(i, j) {\n    var tempState = [...this.state.boardState];\n    tempState[i][j] = \"empty\";\n    this.setState({\n      boardState: tempState,\n      pieceJumped: true\n    });\n    return;\n  }\n\n  isJumpPossible() {\n    var jumpCoords = [];\n\n    if (this.state.whiteTurn) {\n      for (let i = 2; i < 7; i++) {\n        for (let j = 0; j < 7; j++) {\n          if (this.getPiece(i, j) === \"white\") {\n            if (!(j === 1 && i === 2)) if (this.getPiece(i - 1, j - 1) === \"red\" && this.getPiece(i - 2, j - 2) === \"empty\") jumpCoords.push([i, j]);\n            if (!(j === 7 && i === 2)) if (this.getPiece(i - 1, j + 1) === \"red\" && this.getPiece(i - 2, j + 2) === \"empty\") jumpCoords.push([i, j]);\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < 5; i++) {\n        for (let j = 0; j < 7; j++) {\n          if (this.getPiece(i, j) === \"red\") {\n            if (!(j === 0 && i === 5)) if (this.getPiece(i + 1, j - 1) === \"white\" && this.getPiece(i + 2, j - 2) === \"empty\") jumpCoords.push([i, j]);\n            if (!(j === 6 && i === 5)) if (this.getPiece(i + 1, j + 1) === \"white\" && this.getPiece(i + 2, j + 2) === \"empty\") jumpCoords.push([i, j]);\n          }\n        }\n      }\n    }\n\n    return jumpCoords;\n  }\n\n  isValidMove(i, j) {\n    var [iC, jC] = this.state.pieceLoadedCoords;\n    var piece = this.state.pieceLoaded;\n    var diffI = Math.abs(i - iC);\n    var diffJ = Math.abs(j - jC);\n    var getPiece = \"\";\n\n    switch (piece) {\n      case \"whiteKing\":\n      case \"redKing\":\n        if (this.hasPiece(i, j)) return false;\n        if (diffI !== diffJ) return false; // Right down\n\n        var piecesJumped = 0;\n        var pieceJumpedX = 0;\n        var pieceJumpedY = 0;\n        var diffX = 0;\n        var diffY = 0;\n\n        if (i > iC && j > jC) {\n          for (let x = i; x > iC; x--) {\n            for (let y = j; y > jC; y--) {\n              diffX = Math.abs(x - iC);\n              diffY = Math.abs(y - jC);\n\n              if (diffX === diffY) {\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\n                  pieceJumpedX = x;\n                  pieceJumpedY = y;\n                  piecesJumped += 1;\n                }\n\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n              }\n            }\n          }\n        } // Left Down\n\n\n        if (i > iC && j < jC) {\n          for (let x = i; x > iC; x--) {\n            for (let y = j; y < jC; y++) {\n              diffX = Math.abs(x - iC);\n              diffY = Math.abs(y - jC);\n\n              if (diffX === diffY) {\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\n                  pieceJumpedX = x;\n                  pieceJumpedY = y;\n                  piecesJumped += 1;\n                }\n\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n              }\n            }\n          }\n        } // Right up\n\n\n        if (i < iC && j > jC) {\n          for (let x = i; x < iC; x++) {\n            for (let y = j; y > jC; y--) {\n              diffX = Math.abs(x - iC);\n              diffY = Math.abs(y - jC);\n\n              if (diffX === diffY) {\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\n                  pieceJumpedX = x;\n                  pieceJumpedY = y;\n                  piecesJumped += 1;\n                }\n\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n              }\n            }\n          }\n        } // Left Up\n\n\n        if (i < iC && j < jC) {\n          for (let x = i; x < iC; x++) {\n            for (let y = j; y < jC; y++) {\n              diffX = Math.abs(x - iC);\n              diffY = Math.abs(y - jC);\n\n              if (diffX === diffY) {\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\n                  pieceJumpedX = x;\n                  pieceJumpedY = y;\n                  piecesJumped += 1;\n                }\n\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n              }\n            }\n          }\n        }\n\n        if (piecesJumped > 1) return false;\n        if (piecesJumped > 0) this.removeJumpedPiece(pieceJumpedX, pieceJumpedY);\n        return true;\n\n      case \"white\":\n        if (i > iC) return false;\n        if (this.hasPiece(i, j)) return false;\n        if (diffI === diffJ && diffI === 1) return true;\n\n        if (diffI === diffJ && diffI === 2) {\n          getPiece = this.getPiece(i + 1, j - 1);\n\n          if (j > jC && (getPiece === \"red\" || getPiece === \"redKing\")) {\n            this.setState({\n              redPieces: this.state.redPieces - 1\n            }, this.removeJumpedPiece(i + 1, j - 1));\n            return true;\n          }\n\n          getPiece = this.getPiece(i + 1, j + 1);\n\n          if (j < jC && (getPiece === \"red\" || getPiece === \"redKing\")) {\n            this.setState({\n              redPieces: this.state.redPieces - 1\n            }, this.removeJumpedPiece(i + 1, j + 1));\n            return true;\n          }\n        }\n\n        break;\n\n      case \"red\":\n        if (i < iC) return false;\n        if (this.hasPiece(i, j)) return false;\n        if (diffI === diffJ && diffI === 1) return true;\n\n        if (diffI === diffJ && diffI === 2) {\n          getPiece = this.getPiece(i - 1, j - 1);\n\n          if (j > jC && (getPiece === \"white\" || getPiece === \"whiteKing\")) {\n            this.setState({\n              whitePieces: this.state.whitePieces - 1\n            }, this.removeJumpedPiece(i - 1, j - 1));\n            return true;\n          }\n\n          getPiece = this.getPiece(i - 1, j + 1);\n\n          if (j < jC && (getPiece === \"white\" || getPiece === \"whiteKing\")) {\n            this.setState({\n              whitePieces: this.state.whitePieces - 1\n            }, this.removeJumpedPiece(i - 1, j + 1));\n            return true;\n          }\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  makeMove(i, j) {\n    var tempState = [...this.state.boardState];\n    const piece = this.state.pieceLoaded;\n\n    if (this.isValidMove(i, j)) {\n      if (piece === \"white\" && i === 0) tempState[i][j] = \"whiteKing\";else if (piece === \"red\" && i === 7) tempState[i][j] = \"redKing\";else tempState[i][j] = piece;\n      var [iPrev, jPrev] = this.state.pieceLoadedCoords;\n      tempState[iPrev][jPrev] = \"empty\";\n      this.setState({\n        boardState: [...tempState],\n        whiteTurn: !this.state.whiteTurn // whiteTurn: (this.isJumpPossible().length !== 0 && this.state.pieceJumped) ? this.state.whiteTurn : !this.state.whiteTurn,\n        // pieceJumped : false,\n\n      }, () => console.log(\"moved\"));\n    }\n\n    this.setState({\n      pieceLoaded: \"null\"\n    }, () => console.log(\"piece unloaded\"));\n  }\n\n  handleClick(index) {\n    const [i, j] = index;\n    const piece = this.state.boardState[i][j];\n    const jumpPossible = this.isJumpPossible();\n    var canJump = false;\n\n    for (let x = 0; x < jumpPossible.length; x++) if (jumpPossible[x][0] === i && jumpPossible[x][1] === j) canJump = true;\n\n    if (canJump === false && jumpPossible.length !== 0 && piece !== \"empty\") {\n      console.log(\"Jump possible\");\n      return;\n    }\n\n    if ((piece === \"white\" || piece === \"whiteKing\") && !this.state.whiteTurn) return;\n    if ((piece === \"red\" || piece === \"redKing\") && this.state.whiteTurn) return;\n    if (piece === \"empty\" && this.state.pieceLoaded === \"null\" || piece === \"null\") return;\n\n    if (this.state.pieceLoaded === \"null\") {\n      this.setState({\n        pieceLoaded: piece,\n        pieceLoadedCoords: index\n      }, () => console.log(\"loaded\"));\n    } else this.makeMove(i, j);\n  }\n\n  initializeBoardState() {\n    var board = Array(8);\n    var isNull = true;\n\n    for (let i = 0; i < 8; i++) {\n      board[i] = new Array(8);\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"red\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    for (let i = 3; i < 5; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"empty\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    for (let i = 5; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"white\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    this.setState({\n      boardState: board,\n      isBoardInitialized: true\n    });\n  }\n\n  render() {\n    if (!this.state.isBoardInitialized) {\n      this.initializeBoardState();\n    } else {\n      var clickHandler;\n      var turn = this.state.whiteTurn ? \"White\" : \"Red\";\n      var winMessage = \"\";\n      if (this.checkGameOver()) winMessage = clickHandler = () => true;else clickHandler = this.handleClick.bind(this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Turn: \", turn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          boardState: this.state.boardState,\n          onClick: clickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"names":["React","Square","Component","render","props","piece","onClick","Board","renderSquare","index","makeBoard","boardState","boardRows","Array","i","row","j","push","Game","constructor","state","isBoardInitialized","pieceLoaded","pieceLoadedCoords","redPieces","whitePieces","whiteTurn","pieceJumped","checkGameOver","getPiece","hasPiece","removeJumpedPiece","tempState","setState","isJumpPossible","jumpCoords","isValidMove","iC","jC","diffI","Math","abs","diffJ","piecesJumped","pieceJumpedX","pieceJumpedY","diffX","diffY","x","y","makeMove","iPrev","jPrev","console","log","handleClick","jumpPossible","canJump","length","initializeBoardState","board","isNull","clickHandler","turn","winMessage","bind"],"sources":["C:/Users/ubaid/Desktop/Summer Projects/checkers-game/src/Game.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\n\r\n\r\n\r\nclass Square extends React.Component<any, any> {\r\n\r\n  render() {\r\n\r\n    if (this.props.piece === \"null\")\r\n      return (\r\n        <div\r\n          className=\"square white\"\r\n          onClick={this.props.onClick}\r\n        >\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"white\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece white\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"red\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece red\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"whiteKing\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece white king\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"redKing\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece red king\"></div>\r\n        </div>\r\n      )\r\n\r\n    return (\r\n      <div\r\n        className=\"square green\"\r\n        onClick={this.props.onClick}\r\n      ></div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Board extends React.Component<any, any> {\r\n\r\n  renderSquare(piece: string, index: Array<any>) {\r\n    return <Square piece={piece}\r\n      onClick={() => this.props.onClick(index)} />;\r\n  }\r\n\r\n  makeBoard(boardState: Array<Array<string>>) {\r\n    var boardRows: any[] = new Array(8);\r\n    for (let i = 0; i < 8; i++) {\r\n      var row: any[] = new Array(8);\r\n      for (let j = 0; j < 8; j++) {\r\n        row.push(this.renderSquare(boardState[i][j], [i, j]));\r\n      }\r\n      boardRows.push(\r\n        <div>\r\n          {row}\r\n        </div>\r\n      )\r\n    }\r\n    return boardRows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.makeBoard(this.props.boardState)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Game extends React.Component<any, any> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      boardState: [],\r\n      isBoardInitialized: false,\r\n      pieceLoaded: \"null\",\r\n      pieceLoadedCoords: [],\r\n      redPieces: 12,\r\n      whitePieces: 12,\r\n      whiteTurn: true,\r\n      pieceJumped: false,\r\n    }\r\n  }\r\n\r\n  checkGameOver(): string {\r\n    if (this.state.redPieces === 0)\r\n      return \"red\";\r\n    return false;\r\n  }\r\n\r\n  getPiece(i: number, j: number): string {\r\n    return this.state.boardState[i][j];\r\n  }\r\n\r\n  hasPiece(i: number, j: number): boolean {\r\n    if (this.state.boardState[i][j] === \"empty\")\r\n      return false;\r\n    else return true;\r\n  }\r\n\r\n  removeJumpedPiece(i: number, j: number): any {\r\n    var tempState = [...this.state.boardState];\r\n    tempState[i][j] = \"empty\";\r\n\r\n\r\n    this.setState({\r\n      boardState: tempState,\r\n      pieceJumped: true,\r\n    });\r\n    return;\r\n  }\r\n\r\n  isJumpPossible(): Array<Array<number>> {\r\n    var jumpCoords: Array<Array<number>> = [];\r\n    if (this.state.whiteTurn) {\r\n      for (let i = 2; i < 7; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n          if (this.getPiece(i, j) === \"white\") {\r\n            if (!(j === 1 && i === 2))\r\n              if (this.getPiece(i - 1, j - 1) === \"red\" && this.getPiece(i - 2, j - 2) === \"empty\")\r\n                jumpCoords.push([i, j]);\r\n\r\n            if (!(j === 7 && i === 2))\r\n              if (this.getPiece(i - 1, j + 1) === \"red\" && this.getPiece(i - 2, j + 2) === \"empty\")\r\n                jumpCoords.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    else {\r\n      for (let i = 0; i < 5; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n          if (this.getPiece(i, j) === \"red\") {\r\n            if (!(j === 0 && i === 5))\r\n              if (this.getPiece(i + 1, j - 1) === \"white\" && this.getPiece(i + 2, j - 2) === \"empty\")\r\n                jumpCoords.push([i, j]);\r\n\r\n            if (!(j === 6 && i === 5))\r\n              if (this.getPiece(i + 1, j + 1) === \"white\" && this.getPiece(i + 2, j + 2) === \"empty\")\r\n                jumpCoords.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return jumpCoords;\r\n\r\n  }\r\n\r\n  isValidMove(i: number, j: number): boolean {\r\n    var [iC, jC] = this.state.pieceLoadedCoords;\r\n    var piece = this.state.pieceLoaded;\r\n    var diffI: number = Math.abs(i - iC);\r\n    var diffJ: number = Math.abs(j - jC);\r\n    var getPiece: string = \"\";\r\n\r\n    switch (piece) {\r\n      case \"whiteKing\":\r\n      case \"redKing\":\r\n\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI !== diffJ) return false;\r\n\r\n        // Right down\r\n        var piecesJumped: number = 0;\r\n        var pieceJumpedX: number = 0;\r\n        var pieceJumpedY: number = 0;\r\n        var diffX: number = 0;\r\n        var diffY: number = 0;\r\n        if (i > iC && j > jC) {\r\n          for (let x = i; x > iC; x--) {\r\n            for (let y = j; y > jC; y--) {\r\n              diffX = Math.abs(x - iC);\r\n              diffY = Math.abs(y - jC);\r\n              if (diffX === diffY) {\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\r\n                  pieceJumpedX = x;\r\n                  pieceJumpedY = y;\r\n                  piecesJumped += 1;\r\n                }\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                  return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Left Down\r\n        if (i > iC && j < jC) {\r\n          for (let x = i; x > iC; x--) {\r\n            for (let y = j; y < jC; y++) {\r\n              diffX = Math.abs(x - iC);\r\n              diffY = Math.abs(y - jC);\r\n              if (diffX === diffY) {\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\r\n                  pieceJumpedX = x;\r\n                  pieceJumpedY = y;\r\n                  piecesJumped += 1;\r\n                }\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                  return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Right up\r\n        if (i < iC && j > jC) {\r\n          for (let x = i; x < iC; x++) {\r\n            for (let y = j; y > jC; y--) {\r\n              diffX = Math.abs(x - iC);\r\n              diffY = Math.abs(y - jC);\r\n              if (diffX === diffY) {\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\r\n                  pieceJumpedX = x;\r\n                  pieceJumpedY = y;\r\n                  piecesJumped += 1;\r\n                }\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                  return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Left Up\r\n        if (i < iC && j < jC) {\r\n          for (let x = i; x < iC; x++) {\r\n            for (let y = j; y < jC; y++) {\r\n              diffX = Math.abs(x - iC);\r\n              diffY = Math.abs(y - jC);\r\n              if (diffX === diffY) {\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) {\r\n                  pieceJumpedX = x;\r\n                  pieceJumpedY = y;\r\n                  piecesJumped += 1;\r\n                }\r\n                if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                  return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (piecesJumped > 1) return false;\r\n        if (piecesJumped > 0)\r\n          this.removeJumpedPiece(pieceJumpedX, pieceJumpedY);\r\n        return true;\r\n\r\n      case \"white\":\r\n        if (i > iC) return false;\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI === diffJ && diffI === 1) return true;\r\n        if (diffI === diffJ && diffI === 2) {\r\n          getPiece = this.getPiece(i + 1, j - 1);\r\n          if (j > jC && (getPiece === \"red\" || getPiece === \"redKing\")) {\r\n            this.setState({\r\n              redPieces: this.state.redPieces - 1\r\n            }, this.removeJumpedPiece(i + 1, j - 1));\r\n            return true;\r\n          }\r\n          getPiece = this.getPiece(i + 1, j + 1);\r\n          if (j < jC && (getPiece === \"red\" || getPiece === \"redKing\")) {\r\n            this.setState({\r\n              redPieces: this.state.redPieces - 1\r\n            }, this.removeJumpedPiece(i + 1, j + 1));\r\n            return true;\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"red\":\r\n        if (i < iC) return false;\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI === diffJ && diffI === 1) return true;\r\n        if (diffI === diffJ && diffI === 2) {\r\n          getPiece = this.getPiece(i - 1, j - 1);\r\n          if (j > jC && (getPiece === \"white\" || getPiece === \"whiteKing\")) {\r\n            this.setState({\r\n              whitePieces: this.state.whitePieces - 1\r\n            }, this.removeJumpedPiece(i - 1, j - 1));\r\n            return true;\r\n          }\r\n          getPiece = this.getPiece(i - 1, j + 1)\r\n          if (j < jC && (getPiece === \"white\" || getPiece === \"whiteKing\")) {\r\n            this.setState({\r\n              whitePieces: this.state.whitePieces - 1\r\n            }, this.removeJumpedPiece(i - 1, j + 1));\r\n            return true;\r\n          }\r\n        }\r\n        break;\r\n\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  makeMove(i: number, j: number) {\r\n\r\n    var tempState: Array<Array<string>> = [...this.state.boardState];\r\n    const piece: string = this.state.pieceLoaded;\r\n\r\n    if (this.isValidMove(i, j)) {\r\n      if (piece === \"white\" && i === 0)\r\n        tempState[i][j] = \"whiteKing\";\r\n      else if (piece === \"red\" && i === 7)\r\n        tempState[i][j] = \"redKing\";\r\n      else\r\n        tempState[i][j] = piece;\r\n\r\n      var [iPrev, jPrev] = this.state.pieceLoadedCoords;\r\n      tempState[iPrev][jPrev] = \"empty\";\r\n\r\n      this.setState({\r\n        boardState: [...tempState],\r\n        whiteTurn: !this.state.whiteTurn\r\n        // whiteTurn: (this.isJumpPossible().length !== 0 && this.state.pieceJumped) ? this.state.whiteTurn : !this.state.whiteTurn,\r\n        // pieceJumped : false,\r\n      }, () => console.log(\"moved\"));\r\n    }\r\n\r\n    this.setState({\r\n      pieceLoaded: \"null\",\r\n    }, () => console.log(\"piece unloaded\"));\r\n\r\n  }\r\n\r\n\r\n  handleClick(index: Array<number>) {\r\n    const [i, j] = index;\r\n    const piece: string = this.state.boardState[i][j];\r\n\r\n    const jumpPossible: Array<Array<number>> = this.isJumpPossible();\r\n    var canJump: boolean = false;\r\n\r\n    for (let x = 0; x < jumpPossible.length; x++)\r\n      if (jumpPossible[x][0] === i && jumpPossible[x][1] === j)\r\n        canJump = true;\r\n\r\n    if (canJump === false && jumpPossible.length !== 0 && piece !== \"empty\") {\r\n      console.log(\"Jump possible\");\r\n      return;\r\n    }\r\n\r\n\r\n    if ((piece === \"white\" || piece === \"whiteKing\") && !this.state.whiteTurn) return;\r\n    if ((piece === \"red\" || piece === \"redKing\") && this.state.whiteTurn) return;\r\n    if ((piece === \"empty\" && this.state.pieceLoaded === \"null\") ||\r\n      piece === \"null\") return;\r\n\r\n    if (this.state.pieceLoaded === \"null\") {\r\n      this.setState({\r\n        pieceLoaded: piece,\r\n        pieceLoadedCoords: index\r\n      }, () => console.log(\"loaded\"));\r\n    }\r\n\r\n    else this.makeMove(i, j);\r\n  }\r\n\r\n\r\n\r\n  initializeBoardState() {\r\n    var board: Array<Array<string>> = Array(8);\r\n    var isNull: boolean = true;\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      board[i] = new Array(8);\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"red\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    for (let i = 3; i < 5; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"empty\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    for (let i = 5; i < 8; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"white\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    this.setState({\r\n      boardState: board,\r\n      isBoardInitialized: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isBoardInitialized) {\r\n      this.initializeBoardState();\r\n    }\r\n\r\n    else {\r\n      var clickHandler;\r\n      var turn = this.state.whiteTurn ? \"White\" : \"Red\";\r\n      var winMessage = \"\";\r\n\r\n      if (this.checkGameOver())\r\n        winMessage = \r\n        clickHandler = () => true;\r\n      else\r\n        clickHandler = this.handleClick.bind(this);\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div>\r\n            Turn: {turn}\r\n          </div>\r\n          <Board\r\n            boardState={this.state.boardState}\r\n            onClick={clickHandler}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}