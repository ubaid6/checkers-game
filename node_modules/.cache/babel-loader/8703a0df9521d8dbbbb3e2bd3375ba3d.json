{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KHAN\\\\Desktop\\\\Personal_Projects\\\\checkers-game\\\\src\\\\Game.tsx\";\nimport React from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    if (this.props.piece === \"null\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square white\",\n      onClick: this.props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"white\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"red\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"whiteKing\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece white king\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n    if (this.props.piece === \"redKing\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece red king\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square green\",\n      onClick: this.props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(piece, index) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      piece: piece,\n      onClick: () => this.props.onClick(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  makeBoard(boardState) {\n    var boardRows = new Array(8);\n\n    for (let i = 0; i < 8; i++) {\n      var row = new Array(8);\n\n      for (let j = 0; j < 8; j++) {\n        row.push(this.renderSquare(boardState[i][j], [i, j]));\n      }\n\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this));\n    }\n\n    return boardRows;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: this.makeBoard(this.props.boardState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardState: [],\n      isBoardInitialized: false,\n      pieceLoaded: \"null\",\n      pieceLoadedCoords: [],\n      redPieces: 12,\n      whitePieces: 12\n    };\n  }\n\n  checkGameOver() {\n    if (this.state.redPieces === 0 || this.state.whitePieces === 0) return true;\n    return false;\n  }\n\n  getPiece(i, j) {\n    return this.state.boardState[i][j];\n  }\n\n  hasPiece(i, j) {\n    if (this.state.boardState[i][j] === \"empty\") return false;else return true;\n  }\n\n  removeJumpedPiece(i, j) {\n    var tempState = [...this.state.boardState];\n    tempState[i][j] = \"empty\";\n    this.setState({\n      boardState: tempState\n    });\n    return;\n  }\n\n  isValidMove(piece, i, j) {\n    var [iC, jC] = this.state.pieceLoadedCoords;\n    var diffI = Math.abs(i - iC);\n    var diffJ = Math.abs(j - jC);\n\n    switch (piece) {\n      case \"whiteKing\":\n      case \"redKing\":\n        if (this.hasPiece(i, j)) return false;\n        if (diffI !== diffJ) return false; // Right down\n\n        var piecesJumped = 0;\n\n        if (i > iC && j > jC) {\n          for (let x = i; x >= iC; x--) {\n            for (let y = j; y >= jC; y--) {\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) piecesJumped += 1;\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n            }\n          }\n\n          if (piecesJumped > 1) return false;\n        } // Left Down\n\n\n        if (i > iC && j < jC) {\n          for (let x = i; x >= iC; x--) {\n            for (let y = j; y <= jC; y++) {\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) piecesJumped += 1;\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n            }\n          }\n\n          if (piecesJumped > 1) return false;\n        } // Right up\n\n\n        if (i < iC && j > jC) {\n          for (let x = i; x <= iC; x++) {\n            for (let y = j; y >= jC; y--) {\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) piecesJumped += 1;\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n            }\n          }\n\n          if (piecesJumped > 1) return false;\n        } // Left Up\n\n\n        if (i > iC && j < jC) {\n          for (let x = i; x >= iC; x--) {\n            for (let y = j; y <= jC; y++) {\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece) piecesJumped += 1;\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece) return false;\n            }\n          }\n\n          if (piecesJumped > 1) return false;\n        }\n\n        break;\n\n      case \"white\":\n        if (i > iC) return false;\n        if (this.hasPiece(i, j)) return false;\n        if (diffI === diffJ && diffI === 1) return true;\n\n        if (diffI === diffJ && diffI === 2) {\n          if (j > jC && this.getPiece(i + 1, j - 1) === \"red\") {\n            this.setState({\n              redPieces: this.state.redPieces - 1\n            }, this.removeJumpedPiece(i + 1, j - 1));\n            return true;\n          }\n\n          if (j < jC && this.getPiece(i + 1, j + 1) === \"red\") {\n            this.setState({\n              redPieces: this.state.redPieces - 1\n            }, this.removeJumpedPiece(i + 1, j + 1));\n            return true;\n          }\n        }\n\n        break;\n\n      case \"red\":\n        if (i < iC) return false;\n        if (this.hasPiece(i, j)) return false;\n        if (diffI === diffJ && diffI === 1) return true;\n\n        if (diffI === diffJ && diffI === 2) {\n          if (j > jC && this.getPiece(i - 1, j - 1) === \"white\") {\n            this.setState({\n              whitePieces: this.state.whitePieces - 1\n            }, this.removeJumpedPiece(i - 1, j - 1));\n            return true;\n          }\n\n          if (j < jC && this.getPiece(i - 1, j + 1) === \"white\") {\n            this.setState({\n              whitePieces: this.state.whitePieces - 1\n            }, this.removeJumpedPiece(i - 1, j + 1));\n            return true;\n          }\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  makeMove(i, j) {\n    var tempState = [...this.state.boardState];\n    const piece = this.state.pieceLoaded;\n\n    if (this.isValidMove(piece, i, j)) {\n      if (piece === \"white\" && i === 0) tempState[i][j] = \"whiteKing\";else if (piece === \"red\" && i === 7) tempState[i][j] = \"redKing\";else tempState[i][j] = piece;\n      var iPrev = this.state.pieceLoadedCoords[0];\n      var jPrev = this.state.pieceLoadedCoords[1];\n      tempState[iPrev][jPrev] = \"empty\";\n      this.setState({\n        boardState: [...tempState]\n      }, () => console.log(\"moved\"));\n    }\n\n    this.setState({\n      pieceLoaded: \"null\"\n    }, () => console.log(\"piece unloaded\"));\n  }\n\n  handleClick(index) {\n    const i = index[0];\n    const j = index[1];\n    const piece = this.state.boardState[i][j];\n    if (piece === \"empty\" && this.state.pieceLoaded === \"null\" || piece === \"null\") return;\n\n    if (this.state.pieceLoaded === \"null\") {\n      this.setState({\n        pieceLoaded: piece,\n        pieceLoadedCoords: index\n      }, () => console.log(\"loaded\"));\n    } else this.makeMove(i, j);\n  }\n\n  initializeBoardState() {\n    var board = Array(8);\n    var isNull = true;\n\n    for (let i = 0; i < 8; i++) {\n      board[i] = new Array(8);\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"red\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    for (let i = 3; i < 5; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"empty\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    for (let i = 5; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (isNull) board[i][j] = \"null\";else board[i][j] = \"white\";\n        isNull = !isNull;\n      }\n\n      isNull = !isNull;\n    }\n\n    this.setState({\n      boardState: board,\n      isBoardInitialized: true\n    });\n  }\n\n  render() {\n    if (!this.state.isBoardInitialized) {\n      this.initializeBoardState();\n    } else if (this.checkGameOver()) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          boardState: this.state.boardState,\n          onClick: () => true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        boardState: this.state.boardState,\n        onClick: this.handleClick.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"names":["React","Square","Component","render","props","piece","onClick","Board","renderSquare","index","makeBoard","boardState","boardRows","Array","i","row","j","push","Game","constructor","state","isBoardInitialized","pieceLoaded","pieceLoadedCoords","redPieces","whitePieces","checkGameOver","getPiece","hasPiece","removeJumpedPiece","tempState","setState","isValidMove","iC","jC","diffI","Math","abs","diffJ","piecesJumped","x","y","makeMove","iPrev","jPrev","console","log","handleClick","initializeBoardState","board","isNull","bind"],"sources":["C:/Users/KHAN/Desktop/Personal_Projects/checkers-game/src/Game.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\n\r\n\r\n\r\nclass Square extends React.Component<any, any> {\r\n\r\n  render() {\r\n\r\n    if (this.props.piece === \"null\")\r\n      return (\r\n        <div\r\n          className=\"square white\"\r\n          onClick={this.props.onClick}\r\n        >\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"white\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece white\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"red\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece red\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"whiteKing\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece white king\"></div>\r\n        </div>\r\n      )\r\n\r\n    if (this.props.piece === \"redKing\")\r\n      return (\r\n        <div\r\n          className=\"square green\"\r\n          onClick={this.props.onClick}\r\n        >\r\n          <div className=\"piece red king\"></div>\r\n        </div>\r\n      )\r\n\r\n    return (\r\n      <div\r\n        className=\"square green\"\r\n        onClick={this.props.onClick}\r\n      ></div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Board extends React.Component<any, any> {\r\n\r\n  renderSquare(piece: string, index: Array<any>) {\r\n    return <Square piece={piece}\r\n      onClick={() => this.props.onClick(index)} />;\r\n  }\r\n\r\n  makeBoard(boardState: Array<Array<string>>) {\r\n    var boardRows: any[] = new Array(8);\r\n    for (let i = 0; i < 8; i++) {\r\n      var row: any[] = new Array(8);\r\n      for (let j = 0; j < 8; j++) {\r\n        row.push(this.renderSquare(boardState[i][j], [i, j]));\r\n      }\r\n      boardRows.push(\r\n        <div>\r\n          {row}\r\n        </div>\r\n      )\r\n    }\r\n    return boardRows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.makeBoard(this.props.boardState)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Game extends React.Component<any, any> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      boardState: [],\r\n      isBoardInitialized: false,\r\n      pieceLoaded: \"null\",\r\n      pieceLoadedCoords: [],\r\n      redPieces: 12,\r\n      whitePieces: 12\r\n    }\r\n  }\r\n\r\n  checkGameOver(): boolean {\r\n    if (this.state.redPieces === 0 || this.state.whitePieces === 0)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  getPiece(i: number, j: number): string {\r\n    return this.state.boardState[i][j];\r\n  }\r\n\r\n  hasPiece(i: number, j: number): boolean {\r\n    if (this.state.boardState[i][j] === \"empty\")\r\n      return false;\r\n    else return true;\r\n  }\r\n\r\n  removeJumpedPiece(i: number, j: number): any {\r\n    var tempState = [...this.state.boardState];\r\n    tempState[i][j] = \"empty\";\r\n\r\n    this.setState({ boardState: tempState });\r\n    return;\r\n  }\r\n\r\n  isValidMove(piece: string, i: number, j: number): boolean {\r\n    var [iC, jC] = this.state.pieceLoadedCoords;\r\n    var diffI: number = Math.abs(i - iC);\r\n    var diffJ: number = Math.abs(j - jC);\r\n\r\n    switch (piece) {\r\n      case \"whiteKing\":\r\n      case \"redKing\":\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI !== diffJ) return false;\r\n        // Right down\r\n        var piecesJumped: number = 0;\r\n        if (i > iC && j > jC) {\r\n          for (let x = i; x >= iC; x--) {\r\n            for (let y = j; y >= jC; y--) {\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece)\r\n                piecesJumped += 1;\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                return false;\r\n            }\r\n          }\r\n          if (piecesJumped > 1) return false;\r\n        }\r\n\r\n        // Left Down\r\n        if (i > iC && j < jC) {\r\n          for (let x = i; x >= iC; x--) {\r\n            for (let y = j; y <= jC; y++) {\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece)\r\n                piecesJumped += 1;\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                return false;\r\n            }\r\n          }\r\n          if (piecesJumped > 1) return false;\r\n        }\r\n\r\n        // Right up\r\n        if (i < iC && j > jC) {\r\n          for (let x = i; x <= iC; x++) {\r\n            for (let y = j; y >= jC; y--) {\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece)\r\n                piecesJumped += 1;\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                return false;\r\n            }\r\n          }\r\n          if (piecesJumped > 1) return false;\r\n        }\r\n        \r\n        // Left Up\r\n        if (i > iC && j < jC) {\r\n          for (let x = i; x >= iC; x--) {\r\n            for (let y = j; y <= jC; y++) {\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) !== piece)\r\n                piecesJumped += 1;\r\n              if (this.hasPiece(x, y) && this.getPiece(x, y) === piece)\r\n                return false;\r\n            }\r\n          }\r\n          if (piecesJumped > 1) return false;\r\n        }\r\n\r\n        break;\r\n\r\n      case \"white\":\r\n        if (i > iC) return false;\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI === diffJ && diffI === 1) return true;\r\n        if (diffI === diffJ && diffI === 2) {\r\n          if (j > jC && this.getPiece(i + 1, j - 1) === \"red\") {\r\n            this.setState({\r\n              redPieces: this.state.redPieces - 1\r\n            }, this.removeJumpedPiece(i + 1, j - 1));\r\n            return true;\r\n          }\r\n          if (j < jC && this.getPiece(i + 1, j + 1) === \"red\") {\r\n            this.setState({\r\n              redPieces: this.state.redPieces - 1\r\n            }, this.removeJumpedPiece(i + 1, j + 1));\r\n            return true;\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"red\":\r\n        if (i < iC) return false;\r\n        if (this.hasPiece(i, j)) return false;\r\n        if (diffI === diffJ && diffI === 1) return true;\r\n        if (diffI === diffJ && diffI === 2) {\r\n          if (j > jC && this.getPiece(i - 1, j - 1) === \"white\") {\r\n            this.setState({\r\n              whitePieces: this.state.whitePieces - 1\r\n            }, this.removeJumpedPiece(i - 1, j - 1));\r\n            return true;\r\n          }\r\n          if (j < jC && this.getPiece(i - 1, j + 1) === \"white\") {\r\n            this.setState({\r\n              whitePieces: this.state.whitePieces - 1\r\n            }, this.removeJumpedPiece(i - 1, j + 1));\r\n            return true;\r\n          }\r\n        }\r\n        break;\r\n\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  makeMove(i: number, j: number) {\r\n\r\n    var tempState: Array<Array<string>> = [...this.state.boardState];\r\n    const piece: string = this.state.pieceLoaded;\r\n\r\n    if (this.isValidMove(piece, i, j)) {\r\n      if (piece === \"white\" && i === 0)\r\n        tempState[i][j] = \"whiteKing\";\r\n      else if (piece === \"red\" && i === 7)\r\n        tempState[i][j] = \"redKing\";\r\n      else\r\n        tempState[i][j] = piece;\r\n\r\n      var iPrev = this.state.pieceLoadedCoords[0];\r\n      var jPrev = this.state.pieceLoadedCoords[1];\r\n      tempState[iPrev][jPrev] = \"empty\";\r\n\r\n      this.setState({\r\n        boardState: [...tempState]\r\n      }, () => console.log(\"moved\"));\r\n    }\r\n\r\n    this.setState({\r\n      pieceLoaded: \"null\"\r\n    }, () => console.log(\"piece unloaded\"));\r\n\r\n  }\r\n\r\n\r\n  handleClick(index: Array<number>) {\r\n    const i: number = index[0];\r\n    const j: number = index[1];\r\n\r\n    const piece: string = this.state.boardState[i][j];\r\n\r\n    if ((piece === \"empty\" && this.state.pieceLoaded === \"null\") ||\r\n      piece === \"null\") return;\r\n\r\n    if (this.state.pieceLoaded === \"null\") {\r\n      this.setState({\r\n        pieceLoaded: piece,\r\n        pieceLoadedCoords: index\r\n      }, () => console.log(\"loaded\"));\r\n    }\r\n\r\n    else this.makeMove(i, j);\r\n  }\r\n\r\n\r\n\r\n  initializeBoardState() {\r\n    var board: Array<Array<string>> = Array(8);\r\n    var isNull: boolean = true;\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      board[i] = new Array(8);\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"red\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    for (let i = 3; i < 5; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"empty\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    for (let i = 5; i < 8; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        if (isNull) board[i][j] = \"null\";\r\n        else board[i][j] = \"white\";\r\n        isNull = !isNull;\r\n      }\r\n      isNull = !isNull;\r\n    }\r\n\r\n    this.setState({\r\n      boardState: board,\r\n      isBoardInitialized: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isBoardInitialized) {\r\n      this.initializeBoardState();\r\n    }\r\n\r\n\r\n    else if (this.checkGameOver()) {\r\n      return (\r\n        <div className=\"game\">\r\n          <Board\r\n            boardState={this.state.boardState}\r\n            onClick={() => true}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else\r\n      return (\r\n        <div className=\"game\">\r\n          <Board\r\n            boardState={this.state.boardState}\r\n            onClick={this.handleClick.bind(this)}\r\n          />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}