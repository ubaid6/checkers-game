{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ubaid\\\\Desktop\\\\Summer Projects\\\\checkers-game\\\\src\\\\Game.tsx\";\nimport React from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hello: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: this.props.className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(color) {\n    var square = /*#__PURE__*/_jsxDEV(Square, {\n      className: \"white-square\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Square, {\n      className: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  makeBoard() {\n    var isWhite = true;\n    var boardRows = new Array(8);\n\n    for (let i = 0; i < 8; i++) {\n      var row = new Array(8);\n\n      for (let j = 0; j < 8; j++) {\n        if (isWhite) row.push(this.renderSquare(\"white-square\"));else row.push(this.renderSquare(\"black-square\"));\n        isWhite = !isWhite;\n      }\n\n      isWhite = !isWhite;\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this));\n    }\n\n    return boardRows;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.makeBoard(), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"names":["React","Square","Component","constructor","props","state","hello","render","className","Board","renderSquare","color","square","makeBoard","isWhite","boardRows","Array","i","row","j","push","Game"],"sources":["C:/Users/ubaid/Desktop/Summer Projects/checkers-game/src/Game.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\n\r\n\r\n\r\nclass Square extends React.Component<any> {\r\n  constructor (props:any) {\r\n    super(props);\r\n    this.state = {\r\n      hello: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className={this.props.className}></button>\r\n    )\r\n  }\r\n}\r\n\r\nclass Board extends React.Component<{}> {\r\n\r\n\r\n  renderSquare(color:string) {\r\n    var square:Square = <Square className=\"white-square\"/>;\r\n    return <Square className={color}/>;\r\n  }\r\n\r\n  makeBoard() {\r\n    var isWhite:boolean = true;\r\n    var boardRows:any[] = new Array(8);\r\n    for (let i=0; i<8; i++) {\r\n      var row:any[] = new Array(8);\r\n      for (let j=0; j<8; j++) {\r\n        if (isWhite)\r\n          row.push(this.renderSquare(\"white-square\"));\r\n        else\r\n          row.push(this.renderSquare(\"black-square\"));\r\n        isWhite = !isWhite;\r\n      }\r\n      isWhite = !isWhite;\r\n      boardRows.push(\r\n        <div>\r\n          {row}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return boardRows;\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.makeBoard()};\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Board></Board>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAIA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAA0C;EACxCC,WAAW,CAAEC,KAAF,EAAa;IACtB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;EAGD;;EAEDC,MAAM,GAAG;IACP,oBACE;MAAQ,SAAS,EAAE,KAAKH,KAAL,CAAWI;IAA9B;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;AAZuC;;AAe1C,MAAMC,KAAN,SAAoBT,KAAK,CAACE,SAA1B,CAAwC;EAGtCQ,YAAY,CAACC,KAAD,EAAe;IACzB,IAAIC,MAAa,gBAAG,QAAC,MAAD;MAAQ,SAAS,EAAC;IAAlB;MAAA;MAAA;MAAA;IAAA,QAApB;;IACA,oBAAO,QAAC,MAAD;MAAQ,SAAS,EAAED;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAEDE,SAAS,GAAG;IACV,IAAIC,OAAe,GAAG,IAAtB;IACA,IAAIC,SAAe,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAtB;;IACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACtB,IAAIC,GAAS,GAAG,IAAIF,KAAJ,CAAU,CAAV,CAAhB;;MACA,KAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;QACtB,IAAIL,OAAJ,EACEI,GAAG,CAACE,IAAJ,CAAS,KAAKV,YAAL,CAAkB,cAAlB,CAAT,EADF,KAGEQ,GAAG,CAACE,IAAJ,CAAS,KAAKV,YAAL,CAAkB,cAAlB,CAAT;QACFI,OAAO,GAAG,CAACA,OAAX;MACD;;MACDA,OAAO,GAAG,CAACA,OAAX;MACAC,SAAS,CAACK,IAAV,eACE;QAAA,UACGF;MADH;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;;IAED,OAAOH,SAAP;EAED;;EAEDR,MAAM,GAAG;IACP,oBACE;MAAA,WACG,KAAKM,SAAL,EADH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAtCqC;;AA2CxC,MAAMQ,IAAN,SAAmBrB,KAAK,CAACE,SAAzB,CAAmC;EAEjCK,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AARgC;;AAWnC,eAAec,IAAf"},"metadata":{},"sourceType":"module"}