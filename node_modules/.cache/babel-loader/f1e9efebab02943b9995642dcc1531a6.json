{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ubaid\\\\Desktop\\\\Summer Projects\\\\checkers-game\\\\src\\\\Game.tsx\";\nimport React from 'react';\nimport './Game.css';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      piece: \"empty\",\n      color: \"null\"\n    };\n  }\n\n  render() {\n    if (this.state.piece === \"empty\") {\n      return;\n    }\n\n    return (\n      /*#__PURE__*/\n      // <button className={this.props.className}></button>\n      _jsxDEV(\"div\", {\n        className: this.props.className,\n        children: /*#__PURE__*/_jsxDEV(Draggable, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"piece white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(color) {\n    var square = /*#__PURE__*/_jsxDEV(Square, {\n      className: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this);\n\n    if (color === \"square white\") square.setState({\n      color: \"white\"\n    });else square.setState({\n      color: \"black\"\n    });\n    return /*#__PURE__*/_jsxDEV(Square, {\n      className: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  makeBoard() {\n    var isWhite = true;\n    var boardRows = new Array(8);\n\n    for (let i = 0; i < 8; i++) {\n      var row = new Array(8);\n\n      for (let j = 0; j < 8; j++) {\n        if (isWhite) row.push(this.renderSquare(\"square white\"));else row.push(this.renderSquare(\"square black\"));\n        isWhite = !isWhite;\n      }\n\n      isWhite = !isWhite;\n      boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this));\n    }\n\n    return boardRows;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: this.makeBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"names":["React","Draggable","Square","Component","constructor","props","state","piece","color","render","className","Board","renderSquare","square","setState","makeBoard","isWhite","boardRows","Array","i","row","j","push","Game"],"sources":["C:/Users/ubaid/Desktop/Summer Projects/checkers-game/src/Game.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Game.css';\r\nimport Draggable from 'react-draggable';\r\nimport { isEmptyBindingElement } from 'typescript';\r\n\r\n\r\n\r\nclass Square extends React.Component<any, any> {\r\n  constructor (props:any) {\r\n    super(props);\r\n    this.state = {\r\n      piece: \"empty\",\r\n      color: \"null\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.piece === \"empty\") {\r\n      return\r\n    }\r\n\r\n    return (\r\n      // <button className={this.props.className}></button>\r\n      <div className={this.props.className}>\r\n        <Draggable>\r\n          <div className=\"piece white\">\r\n          </div>\r\n        </Draggable>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nclass Board extends React.Component<{}> {\r\n\r\n\r\n  renderSquare(color:string) {\r\n    var square:any = <Square className={color}/>\r\n    if (color === \"square white\")\r\n      square.setState({color:\"white\"});\r\n    else square.setState({color:\"black\"});\r\n    return <Square className={color}/>;\r\n  }\r\n\r\n  makeBoard() {\r\n    var isWhite:boolean = true;\r\n    var boardRows:any[] = new Array(8);\r\n    for (let i=0; i<8; i++) {\r\n      var row:any[] = new Array(8);\r\n      for (let j=0; j<8; j++) {\r\n        if (isWhite)\r\n          row.push(this.renderSquare(\"square white\"));\r\n        else\r\n          row.push(this.renderSquare(\"square black\"));\r\n        isWhite = !isWhite;\r\n      }\r\n      isWhite = !isWhite;\r\n      boardRows.push(\r\n        <div>\r\n          {row}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return boardRows;\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"board\">\r\n          {this.makeBoard()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <Board/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAKA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAA+C;EAC7CC,WAAW,CAAEC,KAAF,EAAa;IACtB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,OADI;MAEXC,KAAK,EAAE;IAFI,CAAb;EAID;;EAEDC,MAAM,GAAG;IACP,IAAI,KAAKH,KAAL,CAAWC,KAAX,KAAqB,OAAzB,EAAkC;MAChC;IACD;;IAED;MAAA;MACE;MACA;QAAK,SAAS,EAAE,KAAKF,KAAL,CAAWK,SAA3B;QAAA,uBACE,QAAC,SAAD;UAAA,uBACE;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IAFF;EAUD;;AAxB4C;;AA2B/C,MAAMC,KAAN,SAAoBX,KAAK,CAACG,SAA1B,CAAwC;EAGtCS,YAAY,CAACJ,KAAD,EAAe;IACzB,IAAIK,MAAU,gBAAG,QAAC,MAAD;MAAQ,SAAS,EAAEL;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAjB;;IACA,IAAIA,KAAK,KAAK,cAAd,EACEK,MAAM,CAACC,QAAP,CAAgB;MAACN,KAAK,EAAC;IAAP,CAAhB,EADF,KAEKK,MAAM,CAACC,QAAP,CAAgB;MAACN,KAAK,EAAC;IAAP,CAAhB;IACL,oBAAO,QAAC,MAAD;MAAQ,SAAS,EAAEA;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAEDO,SAAS,GAAG;IACV,IAAIC,OAAe,GAAG,IAAtB;IACA,IAAIC,SAAe,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAtB;;IACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACtB,IAAIC,GAAS,GAAG,IAAIF,KAAJ,CAAU,CAAV,CAAhB;;MACA,KAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;QACtB,IAAIL,OAAJ,EACEI,GAAG,CAACE,IAAJ,CAAS,KAAKV,YAAL,CAAkB,cAAlB,CAAT,EADF,KAGEQ,GAAG,CAACE,IAAJ,CAAS,KAAKV,YAAL,CAAkB,cAAlB,CAAT;QACFI,OAAO,GAAG,CAACA,OAAX;MACD;;MACDA,OAAO,GAAG,CAACA,OAAX;MACAC,SAAS,CAACK,IAAV,eACE;QAAA,UACGF;MADH;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;;IAED,OAAOH,SAAP;EAED;;EAEDR,MAAM,GAAG;IACP,oBACI;MAAK,SAAS,EAAC,OAAf;MAAA,UACG,KAAKM,SAAL;IADH;MAAA;MAAA;MAAA;IAAA,QADJ;EAKD;;AAzCqC;;AA8CxC,MAAMQ,IAAN,SAAmBvB,KAAK,CAACG,SAAzB,CAAmC;EAEjCM,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AARgC;;AAWnC,eAAec,IAAf"},"metadata":{},"sourceType":"module"}